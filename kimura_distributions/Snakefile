R_CONTAINER_CMD="docker run -v /:/home/user -w /home/user/storage2/dump/Orestias/TE-workflows/kimura_distributions fgajardoe/r-custom:latest  "


X=config["xmax"]
Y=config["ymax"]
TITLE=config["title"]

def get_input(wildcards):
    return config["speciesInsertions"][wildcards.specie]

def get_input_asm(wildcards):
    return config["speciesAssemblies"][wildcards.specie]


rule all:
	input:
		config["prefix"]+".kimuraDistrib.pdf",
		config["prefix"]+".genomeSizeContrib.pdf",
		config["prefix"]+".TEorder.kimuraDistrib.pdf",
		config["prefix"]+".TEorder.genomeSizeContrib.pdf"




rule calcGenomeSize:
	input:
		get_input_asm
	output:
		"{specie}.genomeSize.tab"
	shell:
		"cat {input} |awk '{{if(/^>/){{defline=substr($0,2); split(defline,a,\" \"); id=a[1]}}else{{s[id]+=length($0)}}}}END{{for(id in s){{print id\"\t\"s[id]}}}}' > {output}"




rule generateTableForPlotting:
	input:
		bed=expand(config["build_rmgr_path"]+"/{specie}.bed",specie=config["speciesInsertions"]),
		genomesize=expand("{specie}.genomeSize.tab",specie=config["speciesInsertions"])
	params:
		expand("{specie}",specie=config["speciesInsertions"])
		
	output:
		config["prefix"]+".tab"
	shell:
		"echo {params} | perl -pe's/ /\n/g; s/,//g; s/\[//g; s/\]//g' |awk '{{print $0}}' > tmpSpecies && echo {input.bed} | perl -pe's/ +/\n/g' > tmpInsertionsBed && echo {input.genomesize} | perl -pe 's/ +/\n/g' > tmpGenomeSize && paste tmpSpecies tmpInsertionsBed tmpGenomeSize > {output}"

rule plotKimura:
	input:
		config["prefix"]+".tab",
#		config["BedFile_Specie_GenomeSize_equivalence"],
		config["TEclassification"]
	params:
		x=X,
		y=Y,
		t=TITLE,
		TEordersKimura=config["TEorders_to_show_kimura"],
		speciesOrder=config["speciesOrder"],
		TEordersGenomeContrib=config["TEorders_to_show_genomeContrib"],
		TElevel=config["TElevel"],
		normalizeByTotal=config["normalizeByTotal"],
		pal=config["speciesPalette"],

	output:
		config["prefix"]+".kimuraDistrib.pdf",
		config["prefix"]+".genomeSizeContrib.pdf",
		#config["prefix"]+".RData"

	shell:
		R_CONTAINER_CMD+" Rscript plotKimuraDistance.R {input} {params.x} {params.y} '{params.t}' {params.TEordersKimura} {params.speciesOrder} {params.TEordersGenomeContrib} {params.TElevel} {params.normalizeByTotal} {params.pal} "+config["prefix"]

rule plotKimura_TEorders:
	input:
		config["prefix"]+".tab",
#		config["BedFile_Specie_GenomeSize_equivalence"],
		config["TEclassification"]
	params:
		x=X,
		y=Y,
		t=TITLE,
		TEordersKimura=config["TEorders_to_show_genomeContrib"],
		speciesOrder=config["speciesOrder"],
		TEordersGenomeContrib=config["TEorders_to_show_genomeContrib"],
		TElevel="TEorder",
		normalizeByTotal=config["normalizeByTotal"],
		pal=config["speciesPalette"],

	output:
		config["prefix"]+".TEorder.kimuraDistrib.pdf",
		config["prefix"]+".TEorder.genomeSizeContrib.pdf",
		#config["prefix"]+".RData"

	shell:
		R_CONTAINER_CMD+" Rscript plotKimuraDistance.R {input} {params.x} {params.y} '{params.t}' {params.TEordersKimura} {params.speciesOrder} {params.TEordersGenomeContrib} {params.TElevel} {params.normalizeByTotal} {params.pal} "+config["prefix"]+".TEorder"

